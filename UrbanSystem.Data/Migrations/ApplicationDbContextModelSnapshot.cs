// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using UrbanSystem.Data;

#nullable disable

namespace UrbanSystem.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("UrbanSystem.Data.Models.Comment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("PostedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("SuggestionId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("SuggestionId");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("UrbanSystem.Data.Models.Province", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CityName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("StreetName")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.HasKey("Id");

                    b.ToTable("Provinces");

                    b.HasData(
                        new
                        {
                            Id = new Guid("b55cfa08-7e8e-4f1b-9f0f-dc7e4fbc6d97"),
                            CityName = "Sofia",
                            StreetName = "Not Specified"
                        },
                        new
                        {
                            Id = new Guid("c86d7f51-e3c4-4f62-b557-b7bffdecbfe9"),
                            CityName = "Plovdiv",
                            StreetName = "Not Specified"
                        },
                        new
                        {
                            Id = new Guid("f79fa82b-30e8-49ea-b1b1-df85cb202c9e"),
                            CityName = "Varna",
                            StreetName = "Not Specified"
                        },
                        new
                        {
                            Id = new Guid("b789b78d-f118-4f7a-b22d-4e165cbe5303"),
                            CityName = "Burgas",
                            StreetName = "Not Specified"
                        },
                        new
                        {
                            Id = new Guid("e865e9c8-bb7c-4a0d-8715-58c4f5dcd7d0"),
                            CityName = "Ruse",
                            StreetName = "Not Specified"
                        },
                        new
                        {
                            Id = new Guid("679b9b57-98d8-4fc1-bc65-bb98a5159168"),
                            CityName = "Stara Zagora",
                            StreetName = "Not Specified"
                        },
                        new
                        {
                            Id = new Guid("202b67cc-83f5-4e4e-b4d2-69d785f62739"),
                            CityName = "Pleven",
                            StreetName = "Not Specified"
                        },
                        new
                        {
                            Id = new Guid("4c4b5ecf-83c7-4937-91b2-b19e9db55ac5"),
                            CityName = "Sliven",
                            StreetName = "Not Specified"
                        },
                        new
                        {
                            Id = new Guid("5a3b29b8-017e-4e57-8155-d8651da8be5e"),
                            CityName = "Shumen",
                            StreetName = "Not Specified"
                        },
                        new
                        {
                            Id = new Guid("2e6e8718-8bc3-4b26-bcf2-b7c3d5c54e5d"),
                            CityName = "Gabrovo",
                            StreetName = "Not Specified"
                        },
                        new
                        {
                            Id = new Guid("e6c6468e-3f8b-4bc7-b0be-0d143785f637"),
                            CityName = "Pernik",
                            StreetName = "Not Specified"
                        },
                        new
                        {
                            Id = new Guid("63205d79-f5fc-4903-8458-d64f658e0ae3"),
                            CityName = "Haskovo",
                            StreetName = "Not Specified"
                        },
                        new
                        {
                            Id = new Guid("2b7d3f4e-b179-4d02-bc2a-3d54b4930387"),
                            CityName = "Kyustendil",
                            StreetName = "Not Specified"
                        },
                        new
                        {
                            Id = new Guid("164ec9c4-49c0-43ed-8c63-9a88c0591d41"),
                            CityName = "Yambol",
                            StreetName = "Not Specified"
                        },
                        new
                        {
                            Id = new Guid("69c62c8d-1040-469e-b7ea-688e8c1e6587"),
                            CityName = "Dobrich",
                            StreetName = "Not Specified"
                        },
                        new
                        {
                            Id = new Guid("49738b4c-5c9d-4700-8aa6-89c0e62242c4"),
                            CityName = "Razgrad",
                            StreetName = "Not Specified"
                        },
                        new
                        {
                            Id = new Guid("ee8d2310-e9ca-45bc-a0be-d5a5bc57857e"),
                            CityName = "Targovishte",
                            StreetName = "Not Specified"
                        },
                        new
                        {
                            Id = new Guid("d09c4464-409b-41f2-b9e5-53bb459b0e25"),
                            CityName = "Silistra",
                            StreetName = "Not Specified"
                        },
                        new
                        {
                            Id = new Guid("9a5726aa-76a0-4db7-9d08-660ae5ebdc1a"),
                            CityName = "Vidin",
                            StreetName = "Not Specified"
                        },
                        new
                        {
                            Id = new Guid("f8b8c3b0-b9ab-43c4-9112-1869be6cc176"),
                            CityName = "Montana",
                            StreetName = "Not Specified"
                        },
                        new
                        {
                            Id = new Guid("ff8f7f5c-e69d-4d7b-888b-f219a9ab4c71"),
                            CityName = "Vratsa",
                            StreetName = "Not Specified"
                        },
                        new
                        {
                            Id = new Guid("89ee0af6-8a02-45cf-8a01-bb8f56a94b90"),
                            CityName = "Blagoevgrad",
                            StreetName = "Not Specified"
                        },
                        new
                        {
                            Id = new Guid("f34d29f1-df9e-45e0-bd0b-c8e2322e17b4"),
                            CityName = "Smolyan",
                            StreetName = "Not Specified"
                        },
                        new
                        {
                            Id = new Guid("4a4d4203-105c-4517-b375-09f64673b020"),
                            CityName = "Lovech",
                            StreetName = "Not Specified"
                        },
                        new
                        {
                            Id = new Guid("4d23eb75-1dc0-4373-8bc4-d229e38e7f85"),
                            CityName = "Pazardzhik",
                            StreetName = "Not Specified"
                        });
                });

            modelBuilder.Entity("UrbanSystem.Data.Models.Suggestion", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AttachmentUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("Downvotes")
                        .HasColumnType("int");

                    b.Property<string>("Priority")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ProvinceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("UploadedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("Upvotes")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProvinceId");

                    b.ToTable("Suggestions");

                    b.HasData(
                        new
                        {
                            Id = new Guid("cd0189a7-22df-4c52-888e-ef7da46e322c"),
                            Category = "Transport",
                            Description = "Implement more frequent bus routes during peak hours to reduce congestion.",
                            Downvotes = 2,
                            Priority = "High",
                            ProvinceId = new Guid("b55cfa08-7e8e-4f1b-9f0f-dc7e4fbc6d97"),
                            Status = "Pending",
                            Title = "Improve Public Transport",
                            UploadedOn = new DateTime(2024, 10, 29, 19, 37, 39, 336, DateTimeKind.Utc).AddTicks(3328),
                            Upvotes = 10
                        },
                        new
                        {
                            Id = new Guid("481da68b-ceda-4f12-9ca3-6fb0ed164fa5"),
                            Category = "Environment",
                            Description = "Renovate the central park by adding new benches, lighting, and a playground area.",
                            Downvotes = 1,
                            Priority = "Medium",
                            ProvinceId = new Guid("b55cfa08-7e8e-4f1b-9f0f-dc7e4fbc6d97"),
                            Status = "Approved",
                            Title = "Park Renovation",
                            UploadedOn = new DateTime(2024, 10, 29, 19, 37, 39, 336, DateTimeKind.Utc).AddTicks(3341),
                            Upvotes = 25
                        },
                        new
                        {
                            Id = new Guid("8ae884a3-19ee-4140-bb7f-73d35c98904e"),
                            Category = "Waste Management",
                            Description = "Introduce a recycling program and increase the frequency of waste collection.",
                            Downvotes = 0,
                            Priority = "High",
                            ProvinceId = new Guid("c86d7f51-e3c4-4f62-b557-b7bffdecbfe9"),
                            Status = "In Review",
                            Title = "Waste Management System",
                            UploadedOn = new DateTime(2024, 10, 29, 19, 37, 39, 336, DateTimeKind.Utc).AddTicks(3344),
                            Upvotes = 15
                        });
                });

            modelBuilder.Entity("UrbanSystem.Data.Models.Comment", b =>
                {
                    b.HasOne("UrbanSystem.Data.Models.Suggestion", "Suggestion")
                        .WithMany("Comments")
                        .HasForeignKey("SuggestionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Suggestion");
                });

            modelBuilder.Entity("UrbanSystem.Data.Models.Suggestion", b =>
                {
                    b.HasOne("UrbanSystem.Data.Models.Province", "Province")
                        .WithMany("Suggestions")
                        .HasForeignKey("ProvinceId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Province");
                });

            modelBuilder.Entity("UrbanSystem.Data.Models.Province", b =>
                {
                    b.Navigation("Suggestions");
                });

            modelBuilder.Entity("UrbanSystem.Data.Models.Suggestion", b =>
                {
                    b.Navigation("Comments");
                });
#pragma warning restore 612, 618
        }
    }
}
